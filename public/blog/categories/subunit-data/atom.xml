<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: subunit data | Mere Code]]></title>
  <link href="http://code.mumak.net/blog/categories/subunit-data/atom.xml" rel="self"/>
  <link href="http://code.mumak.net/"/>
  <updated>2013-09-13T22:56:47+01:00</updated>
  <id>http://code.mumak.net/</id>
  <author>
    <name><![CDATA[Jonathan Lange]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Tests that print stuff]]></title>
    <link href="http://code.mumak.net/2010/11/tests-that-print-stuff.html"/>
    <updated>2010-11-26T00:00:00+00:00</updated>
    <id>http://code.mumak.net/2010/11/tests-that-print-stuff</id>
    <content type="html"><![CDATA[<div class='post'>
Tests that print stuff to stdout or stderr annoy me. &nbsp;They make a successful test run much less satisfying to watch, and they clutter logs when you are trying to debug a failure.<br /><br />Launchpad has quite a few tests that print stuff. &nbsp;I was going to fix them up today, but I've got a Launchpad branch in progress and I've promised myself that I'll have only one in progress at a time. Besides, the build is broken.<br /><br />Anyway, I've written a quick hack that lets you analyze a <a href="http://launchpad.net/subunit">subunit</a> stream to <a href="http://paste.ubuntu.com/536731/">see which tests print stuff</a>.<br /><br />To get a subunit stream including the output itself:<br /><pre>$&nbsp;gzip -dc testtools-experiment-r11753.subunit.gz | grep -v time: | &nbsp;python tests-with-output.py</pre><br />To get a list of the tests:<br /><pre>$&nbsp;gzip -dc testtools-experiment-r11753.subunit.gz | &nbsp;python tests-with-output.py &nbsp;| subunit-ls --no-passthrough</pre><br />For those interested, Launchpad has roughly one hundred such tests.<br /><br />As with my last post, I'm left with the feeling that subunit is great but needs a lot more polish. &nbsp;I guess my next step is to figure out how to upstream these.</div>

]]></content>
  </entry>
  
</feed>
